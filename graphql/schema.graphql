"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    categories: [Category!]! @all
    category(id: ID @eq): Category @find
    products(category: String): [Product!]! @field(resolver: "App\\GraphQL\\Queries\\Products")
    product(id: ID @eq): Product @find
}

type Mutation {
    login(input: LoginInput! @spread): User! @field(resolver: "App\\GraphQL\\Mutations\\Login")
    register(input: RegisterInput! @spread): User! @field(resolver: "App\\GraphQL\\Mutations\\Register")
    forgotPassword(input: ForgotPasswordInput! @spread): GeneralResponse!  @field(resolver: "App\\GraphQL\\Mutations\\ForgotPassword")
    resetPassword(input: ResetPasswordInput! @spread): GeneralResponse!  @field(resolver: "App\\GraphQL\\Mutations\\ResetPassword")
    logout: GeneralResponse! @authenticated @field(resolver: "App\\GraphQL\\Mutations\\Logout")
}

type User {
    id: ID!
    name: String
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    role: String @method(name: "getRole")
}

type Product {
    id: ID!
    title: String
    description: String
    category_id: Int!
    price: Float!
    discount: Int
    image: String
}

type Category {
    id: ID!
    title: String!
}

input LoginInput {
    email: String!
    password: String!
}

input RegisterInput {
    name: String
    email: String!
    password: String!
    password_confirmation: String!
}

input ForgotPasswordInput {
    email: String!
}

input ResetPasswordInput {
    email: String!
    password: String!
    password_confirmation: String!
    token: String!
}

type GeneralResponse {
    error: Boolean!
    data: String!
}
